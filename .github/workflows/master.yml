name: CI

on:
  push:
    branches:
      - master
    tags:
      - "*"
      - "**"
      - v*
  schedule:
    - cron: "53 2 * * 2"
  workflow_dispatch:

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          token: ${{ secrets.OWNER_TOKEN }}
          fetch-depth: 0 # Required to get tags
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: mtand
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Get Previous tag"
        id: current_version
        uses: "WyriHaximus/github-action-get-previous-tag@v1.4.0"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

      - name: get docker tag
        id: git
        run: |
          echo "SOURCE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "SOURCE_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "DOCKER_TAG=mtand/rsync:latest,mtand/rsync:${{ steps.current_version.outputs.tag }},mtand/rsync:${{ steps.current_version.outputs.tag }}.$(date +%y%j)" >> $GITHUB_OUTPUT
          elif [ "${GITHUB_REF#refs/heads/}" == "master" ]; then
            echo "DOCKER_TAG=mtand/rsync:latest" >> $GITHUB_OUTPUT
          else
            echo "DOCKER_TAG=mtand/rsync:${GITHUB_REF#refs/tags/},mtand/rsync:${GITHUB_REF#refs/tags/}.$(date +%y%j)" >> $GITHUB_OUTPUT
          fi

      - name: Result
        run: |
          echo "Prev tag: ${{ steps.current_version.outputs.tag }}"
          echo "Docker tag: ${{ steps.git.outputs.DOCKER_TAG }}"
          echo "${{ github.event_name }}"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm/v6,linux/arm64,linux/arm/v7
          tags: ${{ steps.git.outputs.DOCKER_TAG }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Extract tag
        run: |
          set -e -x
          TAG=$(grep -Po 'alpine:\K(.*)' Dockerfile)
          git tag $TAG || echo "Existing tag"
          git push origin $TAG || echo "tag exists"
